apply plugin: 'com.android.library'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.0"

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        testApplicationId "com.commonsware.cwac.netsecurity.okhttp3.test"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "TEST_PRIVATE_HTTP_URL", '"'+TEST_PRIVATE_HTTP_URL+'"'
        buildConfigField "String", "TEST_PRIVATE_HTTP_REDIR_URL", '"'+TEST_PRIVATE_HTTP_REDIR_URL+'"'
        buildConfigField "String", "TEST_PRIVATE_HTTPS_URL", '"'+TEST_PRIVATE_HTTPS_URL+'"'
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    androidTestCompile 'com.android.support.test:rules:0.5'
    compile 'com.squareup.okhttp3:okhttp:3.3.1'
    compile project(':netsecurity')
}

if (project.hasProperty('PUBLISH_GROUP_ID')) {
    // based on http://stackoverflow.com/a/23672732/115145

    android.libraryVariants.all { variant ->
        task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
            description "Generates Javadoc for $variant.name."
            source = variant.javaCompile.source
            ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
            classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
//        options.links("http://docs.oracle.com/javase/7/docs/api/");
//        options.links("http://d.android.com/reference/");
            exclude '**/BuildConfig.java'
            exclude '**/R.java'
            exclude '**/config/*.java'
            exclude '**/conscrypt/*.java'
            exclude '**/internalutil/*.java'
            exclude '**/luni/*.java'
        }
    }

    apply plugin: 'maven'

    uploadArchives {
        repositories.mavenDeployer {
            pom.groupId = PUBLISH_GROUP_ID
            pom.artifactId = PUBLISH_ARTIFACT_ID
            pom.version = PUBLISH_VERSION

            repository(url: LOCAL_REPO)
        }
    }
}
